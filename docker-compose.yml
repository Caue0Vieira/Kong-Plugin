services:
  kong:
    build:
      context: .
      dockerfile: DockerFile
    restart: on-failure:10
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
      - 8002:8002
      - 8445:8445
      - 8003:8003
      - 8004:8004
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: db
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yaml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
      KONG_PLUGINS: bundled,keycloak-jwt-validator
    volumes:
      - ./kong/declarative:/kong/declarative
    extra_hosts:
      - host.docker.internal:host-gateway

  db:
    image: postgres:14
    container_name: pg14-kong
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    ports:
      - "5432:5432"
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-d",
          "kong",
          "-U",
          "kong"
        ]
      interval: 30s
      timeout: 30s
      retries: 3

  kong-migrations:
    image: kong:3.7
    command: /bin/sh -c "kong migrations up && kong migrations finish"
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: db
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    depends_on:
      db:
        condition: service_healthy
